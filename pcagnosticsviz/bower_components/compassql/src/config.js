"use strict";
var channel_1 = require('vega-lite/src/channel');
var aggregate_1 = require('vega-lite/src/aggregate');
var mark_1 = require('vega-lite/src/mark');
var scale_1 = require('vega-lite/src/scale');
var sort_1 = require('vega-lite/src/sort');
var timeunit_1 = require('vega-lite/src/timeunit');
var type_1 = require('vega-lite/src/type');
var property_1 = require('./property');
exports.DEFAULT_QUERY_CONFIG = {
    verbose: false,
    defaultSpecConfig: {
        overlay: { line: true },
        scale: { useRawDomain: true }
    },
    propertyPrecedence: property_1.DEFAULT_PROPERTY_PRECEDENCE,
    marks: [mark_1.Mark.POINT, mark_1.Mark.BAR, mark_1.Mark.LINE, mark_1.Mark.AREA, mark_1.Mark.TICK],
    channels: [channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN, channel_1.SIZE, channel_1.COLOR],
    aggregates: [undefined, aggregate_1.AggregateOp.MEAN],
    timeUnits: [undefined, timeunit_1.TimeUnit.YEAR, timeunit_1.TimeUnit.MONTH, timeunit_1.TimeUnit.DATE, timeunit_1.TimeUnit.MINUTES, timeunit_1.TimeUnit.SECONDS],
    types: [type_1.Type.NOMINAL, type_1.Type.ORDINAL, type_1.Type.QUANTITATIVE, type_1.Type.TEMPORAL],
    maxBinsList: [5, 10, 20],
    axisAxisColors: [undefined],
    axisAxisWidths: [undefined],
    axisLayers: ['front', 'back'],
    axisOffsets: [undefined],
    axisOrients: [undefined],
    axisGridColors: [undefined],
    axisGridDashes: [undefined],
    axisGridOpacities: [undefined],
    axisGridWidths: [undefined],
    axisFormats: [undefined],
    axisLabelAngles: [undefined],
    axisLabelMaxLengths: [undefined],
    axisSubDivides: [undefined],
    axisTicks: [undefined],
    axisTickColors: [undefined],
    axisTickLabelColors: [undefined],
    axisTickLabelFonts: [undefined],
    axisTickLabelFontSizes: [undefined],
    axisTickPaddings: [undefined],
    axisTickSizes: [undefined],
    axisTickSizeMajors: [undefined],
    axisTickSizeMinors: [undefined],
    axisTickSizeEnds: [undefined],
    axisTickWidths: [undefined],
    axisValuesList: [undefined],
    axisTitles: [undefined],
    axisTitleColors: [undefined],
    axisTitleFonts: [undefined],
    axisTitleFontWeights: [undefined],
    axisTitleFontSizes: [undefined],
    axisTitleOffsets: [undefined],
    axisTitleMaxLengths: [undefined],
    axisCharacterWidths: [undefined],
    legendOrients: ['left', 'right'],
    legendOffsets: [undefined],
    legendValuesList: [undefined],
    legendFormats: [undefined],
    legendLabelAligns: [undefined],
    legendLabelBaselines: [undefined],
    legendLabelColors: [undefined],
    legendLabelFonts: [undefined],
    legendLabelFontSizes: [undefined],
    legendSymbolColors: [undefined],
    legendSymbolShapes: [undefined],
    legendSymbolSizes: [undefined],
    legendSymbolStrokeWidths: [undefined],
    legendTitles: [undefined],
    legendTitleColors: [undefined],
    legendTitleFonts: [undefined],
    legendTitleFontSizes: [undefined],
    legendTitleFontWeights: [undefined],
    // TODO: Come back and implement correctly when designing sort enumeration.
    sorts: [sort_1.SortOrder.ASCENDING, sort_1.SortOrder.DESCENDING],
    sortOps: [aggregate_1.AggregateOp.MIN, aggregate_1.AggregateOp.MEAN],
    sortOrders: [sort_1.SortOrder.ASCENDING, sort_1.SortOrder.DESCENDING],
    scaleBandSizes: [17, 21],
    scaleDomains: [undefined],
    scaleExponents: [1],
    scaleRanges: [undefined],
    scaleTypes: [undefined, scale_1.ScaleType.LOG],
    numberNominalProportion: 0.05,
    numberNominalLimit: 40,
    // CONSTRAINTS
    constraintManuallySpecifiedValue: false,
    // Spec Constraints -- See description inside src/constraints/spec.ts
    autoAddCount: false,
    hasAppropriateGraphicTypeForMark: true,
    omitAggregate: false,
    omitAggregatePlotWithDimensionOnlyOnFacet: true,
    omitAggregatePlotWithoutDimension: false,
    omitBarLineAreaWithOcclusion: true,
    omitBarTickWithSize: true,
    omitMultipleNonPositionalChannels: true,
    omitNonSumStack: true,
    omitRaw: false,
    omitRawContinuousFieldForAggregatePlot: true,
    omitRepeatedField: true,
    omitNonPositionalOrFacetOverPositionalChannels: true,
    omitTableWithOcclusionIfAutoAddCount: true,
    omitVerticalDotPlot: false,
    preferredBinAxis: channel_1.Channel.X,
    preferredTemporalAxis: channel_1.Channel.X,
    preferredOrdinalAxis: channel_1.Channel.Y,
    preferredNominalAxis: channel_1.Channel.Y,
    preferredFacet: channel_1.Channel.ROW,
    // Encoding Constraints -- See description inside src/constraints/encoding.ts
    maxCardinalityForCategoricalColor: 20,
    maxCardinalityForFacet: 20,
    maxCardinalityForShape: 6,
    timeUnitShouldHaveVariation: true,
    typeMatchesSchemaType: true,
    // STYLIZE
    stylize: true,
    smallBandSizeForHighCardinalityOrFacet: { maxCardinality: 10, bandSize: 12 },
    nominalColorScaleForHighCardinality: { maxCardinality: 10, palette: 'category20' },
    xAxisOnTopForHighYCardinalityWithoutColumn: { maxCardinality: 30 },
    // RANKING PREFERENCE
    maxGoodCardinalityForFacet: 5,
    maxGoodCardinalityForColor: 7,
};
//# sourceMappingURL=config.js.map